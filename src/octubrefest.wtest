import carpas.*
import jarras.*
import marcas.*
import personas.*
import paises.*

describe "group of test" {
	
	var corona = new MarcaCervezaRubia()
	var guiness = new MarcaCervezaNegra()
	var hofbrau = new MarcaCervezaRoja()
	var jarra1 = new Jarra()
	var jarra2 = new Jarra()
	var jarra3 = new Jarra()
	var jurgen = new Aleman()
	var schevko = new Checo()
	var carpa1 = new Carpa()
	var estadosUnidos = new Pais()
	var alemania = new Pais()
	
	fixture {
		jarra1.marca(corona)
		jarra1.litros(0.5)
		corona.graduacion(0.08)
		corona.pais(estadosUnidos)
		jarra2.marca(guiness)
		jarra2.litros(1)
		guiness.graduacionReglamentaria(0.10)
		guiness.gramosLupuloPorLitro(3)
		guiness.pais(alemania)
		jurgen.comprarJarra(jarra1)
		jurgen.comprarJarra(jarra2)
		jurgen.peso(80)
		jurgen.aguante(7)
		jurgen.leGustaMusicaTradicional(true)
		jurgen.pais(alemania)
		schevko.comprarJarra(jarra2)
		carpa1.genteAdmitida(5)
		carpa1.ingresoDePersona(schevko)
		carpa1.bandaDeMusica(true)
		carpa1.jarrasCervezas(#{jarra3})
		jarra3.litros(1.5)
		jarra3.marca(corona)
	}

	test "test 1"{
		assert.equals(0.04, jarra1.contenidoDeAlcohol())
	}
	
	test "test 2"{
		assert.equals(0.14, jurgen.alcoholIngerido())
	}
	
	test "test 3"{
		assert.that(jurgen.estaEbria())
	}
	
	test "test 4"{
		assert.notThat(jurgen.quiereEntrarA(carpa1))
	}
	
	test "test 5"{
		assert.notThat(carpa1.dejaIngresarA(jurgen))
	}
	
	test "test 6"{
		assert.notThat(carpa1.puedeEntrar(jurgen))
	}
	
	test "test 7"{
		assert.throwsExceptionWithMessage("no puede ingresar a la carpa", {jurgen.ingresarA(carpa1)})
	}

	test "test 8"{
		assert.equals(1, carpa1.cantEbriosEmpedernidos())
	}
	
	test "test 9"{
		assert.notThat(jurgen.esPatriota())
	}
}



